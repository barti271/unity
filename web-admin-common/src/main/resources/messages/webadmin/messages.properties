TranslationRulesPresenter.codeValue=<code>{0}</code>
TranslationRulesPresenter.ruleCondition={0}: Condition:

TranslationProfileViewer.name=Name:
TranslationProfileViewer.description=Description:
TranslationProfileViewer.mode=Mode:
TranslationProfileViewer.rules=Rules:
TranslationProfileViewer.ruleCondition={0}: Condition:

TranslationActionPresenter.action=Action:
TranslationActionPresenter.actionParameters=Action parameters:
TranslationActionPresenter.actionParameter={0} = <code> {1} </code>
TranslationActionPresenter.codeValue=<code>{0}</code>

MVELExpressionField.invalidValue=MVEL expression is invalid
MVELExpressionField.invalidValueWithReason=MVEL expression is invalid: {0}
MVELExpressionField.conditionDesc=MVEL expression which must evaluate to a boolean value. The rule \
will be executed only if this expression evaluates to true. \
See <a href="https://en.wikisource.org/wiki/MVEL_Language_Guide" target="_blank">MVEL language</a>


TranslationProfileEditor.defaultName=New translation profile
TranslationProfileEditor.name=Name:
TranslationProfileEditor.nameCopy={0}2
TranslationProfileEditor.description=Description:
TranslationProfileEditor.ruleCondition=Condition:
TranslationProfileEditor.errorGetAction=Can not get action instance
TranslationProfileEditor.errorConditionEvaluation=Invalid condition
TranslationProfileEditor.errorExpressionEvaluation=Invalid expression
TranslationProfileEditor.moveUp=Move rule up
TranslationProfileEditor.moveDown=Move rule down
TranslationProfileEditor.moveTop=Move rule to the top
TranslationProfileEditor.moveBottom=Move rule to the bottom
TranslationProfileEditor.remove=Remove
TranslationProfileEditor.newRule=Add rule
TranslationProfileEditor.testProfile=Test profile
TranslationProfileEditor.rules=Profile actions: 
TranslationProfileEditor.outdatedValue=The {0} parameter value is invalid.
TranslationProfileEditor.conditionError=Condition is invalid: {0}

DryRun.wizardCaption=Translation profile test
DryRun.IntroStepComponent.introLabel=This wizard provides the functionality to test input translation profiles. Once you click the next button, a sandbox authentication window will open. You will be able to test the profile configured for an authenticator that you will choose.
DryRun.DryRunStep.caption=Test results 
DryRun.DryRunStepComponent.logsLabel=Server logs:
DryRun.DryRunStepComponent.authnResultLabel.success=Translation profile executed successfully, the authentication was successful.
DryRun.DryRunStepComponent.authnResultLabel.error=Error during profile execution or authentication, for more details please see the logs.
DryRun.RemotelyAuthenticatedContextComponent.title=Received from remote IdP <b>{0}</b>:
DryRun.MappingResultComponent.title=After translation with input translation profile <b>{0}</b>:

Wizard.wizardCaption=Translation profile wizard
Wizard.IntroStep.caption=Introduction
Wizard.IntroStepComponent.introLabel=This wizard will help you to create an input translation profile from scratch. It consists of two simple steps:<br/> <ul><li><b>Sandbox authentication</b>: during this step a window will popup, where you can authenticate using remote authenticator of your choice</li><li><b>Translation profile</b>: in this step you the translation profile is created. <font color="red">Be aware</font> that once you reach this point, you will not be able to go back to previous step. The results of the first step - data obtained from remote IdP - is available for your convenience during profile creation.</li></ul>
Wizard.SandboxStep.caption=Sandbox authentication
Wizard.SandboxStepComponent.infoLabel=The popup window with authentication should be opened automatically. If for some reason browser does not show up, you can manually open sandbox by clicking the button below. 
Wizard.SandboxStepComponent.sboxButton=Open sandbox window
Wizard.ProfileStep.caption=Translation profile
Wizard.ProfileStepComponent.expression=Expression
Wizard.ProfileStepComponent.value=Value
Wizard.ProfileStepComponent.dragdropHint=<b>Hint</b>: Drag the values and drop on input fields.

DaysActionParameterComponent.notANumber=The provided value must be a positive integer number

MappingResultComponent.title=Mapping result:
MappingResultComponent.idsTitle=Identities:
MappingResultComponent.attrsTitle=Attributes:
MappingResultComponent.groupsTitle=Groups:
MappingResultComponent.none=--- None ---
MappingResultComponent.mode=Mode
MappingResultComponent.idsTable.type=Identity type
MappingResultComponent.idsTable.value=Identity value
MappingResultComponent.attrsTable.name=Name
MappingResultComponent.attrsTable.value=Value
MappingResultComponent.groupsTable.group=Group

MessageTemplatesEditor.defaultName=New message template
MessageTemplatesEditor.name=Name:
MessageTemplatesEditor.description=Description:
MessageTemplatesEditor.consumer=Compatible with:
MessageTemplatesEditor.notificationChannel=Notification channel:
MessageTemplatesEditor.subject=Subject:
MessageTemplatesEditor.body=Body:
MessageTemplatesEditor.bodyType=Message Type:
MessageTemplatesEditor.errorConsumers=Can not get message consumers
MessageTemplatesEditor.errorUnknownVars=The following variables are unknown: {0}
MessageTemplatesEditor.errorMandatoryVars=The following variables must be used: {0}
MessageTemplatesEditor.allowedVars=Predefined variables:
MessageTemplatesEditor.externalTemplateInfo=Message template for this channel is managed externally. \
Still custom variables used in the external template may be defined here. \
Those variables will be available for Unity consumers of the template. 
MessageTemplatesEditor.customVariables=Custom variables:
MessageTemplatesEditor.customVariableIllegalCharsError=Illegal characters used. Please use regular alphanumeric characters only.

MessageTemplateViewer.name=Name:
MessageTemplateViewer.description=Description:
MessageTemplateViewer.consumer=Compatible with:
MessageTemplateViewer.notificationChannel=Notification channel:
MessageTemplateViewer.messageType=Message type:
MessageTemplateViewer.locale=Locale:
MessageTemplateViewer.subject=Subject:
MessageTemplateViewer.body=Body:
MessageTemplateViewer.preview=Preview
MessageTemplateViewer.errorMissingTemplate=-- THE TEMPLATE {0} IS MISSING --
MessageTemplateViewer.notSet=Not set

CredentialDefinition.name=Name:
CredentialDefinition.defaultName=New credential
CredentialDefinition.type=Credential type:
CredentialDefinition.typeSettings=Type specific settings
CredentialDefinition.replacementState=What to do with existing credentials of this type:
CredentialDefinitions.outdatedUpdateInfo=The credential definition was successfully updated. Note that the credential\
status will be changed to ''outdated'' only when needed during a future authentication of a principal with affected credential.  

ActionEditor.ruleAction=Action:
ActionEditor.parametersError=Action parameters are invalid: {0}
ActionEditor.actionParameters=Action parameters:
ActionEditor.errorGetActions=Can not get actions list

FileUploader.uploadCaption=File:
FileUploader.uploadFileTooBig=Uploaded file was too large.
FileUploader.uploadFileEmpty=Uploaded file is empty.
FileUploader.uploadInProgress=Upload is currently in progress.
FileUploader.uploadFileFirst=Please upload a file first.
FileUploader.fileUploaded=File was uploaded at {0}
FileUploader.noFileUploaded=No file was uploaded.


RegistrationRequest.type.registration=REGISTRATION
RegistrationRequest.type.enquiry=ENQUIRY
RegistrationRequest.type=Type
RegistrationRequest.form=Form
RegistrationRequest.requestId=Request id
RegistrationRequest.submitTime=Submit time
RegistrationRequest.status=Status
RegistrationRequest.identity=Identity
RegistrationRequest.code=Code
		
RequestsComponent.caption=Requests management

RequestReviewPanel.comment=Requester comments:
RequestReviewPanel.requestedIdentities=Requested identities:
RequestReviewPanel.requestedAttributes=Requested attributes:
RequestReviewPanel.requestedAttributeIgnore=Ignore
RequestReviewPanel.requestedGroups=Requested groups:
RequestReviewPanel.requestedGroupsIgnore=Ignore
RequestReviewPanel.agreements=Acceptance of agreements:
RequestReviewPanel.codeValid=The user has provided a valid registration code.
RequestReviewPanel.accepted=[ACCEPTED]
RequestReviewPanel.notAccepted=[NOT accepted]

EnquiryReviewPanel.enquirySubmitter=Submitted by:
EnquiryReviewPanel.groupsChanges=Requested group changes:
EnquiryReviewPanel.errorEstablishGroups=Can not establish user groups. Requested group changes may be not correct.

RequestCommentPanel.public=[Public message]
RequestCommentPanel.internal=[Internal comment]

RequestProcessingPanel.postPublic=Send message
RequestProcessingPanel.postPublicTooltip=Send a public message to the requester and administrators
RequestProcessingPanel.postInternal=Comment
RequestProcessingPanel.postInternalTooltip=Record an internal message for administrators only
RequestProcessingPanel.accept=Accept
RequestProcessingPanel.reject=Reject
RequestProcessingPanel.drop=Delete
RequestProcessingPanel.errorRequestProccess=Can not process the request.
RequestProcessingPanel.comments=Messages
RequestProcessingPanel.requested=Request contents
RequestProcessingPanel.errorRequestProcess=Can not process request
RequestProcessingPanel.errorGetRegistrationForms=Can not get registration forms
RequestProcessingPanel.errorGetEnquiryForms=Can not get enquiry forms

RegistrationFormViewer.collectedTab=Collected data
RegistrationFormViewer.displayTab=Visual settings
RegistrationFormViewer.displayedName=Displayed name:
RegistrationFormViewer.publicLink=Public URL:
RegistrationFormViewer.formInformation=Form information:
RegistrationFormViewer.registrationCode=Fixed registration code:
RegistrationFormViewer.collectComments=Allow for free text comments:
RegistrationFormViewer.agreements=Agreements:
RegistrationFormViewer.identityType=Identity type {0}
RegistrationFormViewer.identityParams=Collected identities:
RegistrationFormViewer.useAttributeTypeDescription=Display attribute type''s description
RegistrationFormViewer.showAttributeGroup=Show attribute''s group
RegistrationFormViewer.attributeParams=Collected attributes:
RegistrationFormViewer.groupParams=Groups to be selected:
RegistrationFormViewer.credentialParams=Collected credentials:
RegistrationFormViewer.assignedTab=Automation
RegistrationFormViewer.credentialRequirementAssignment=Default credential requirement:
RegistrationFormViewer.mainTab=General settings
RegistrationFormViewer.name=Name:
RegistrationFormViewer.description=Description (internal):
RegistrationFormViewer.publiclyAvailable=The form is publicly available:
RegistrationFormViewer.sendAdminCopy=Send user messages copy to admins:
RegistrationFormViewer.adminsNotificationsGroup=Group with administrators to be notified:
RegistrationFormViewer.submittedTemplate=Submitted request notification template (admin):
RegistrationFormViewer.updatedTemplate=Updated request notification template (user):
RegistrationFormViewer.rejectedTemplate=Rejected request notification template (user):
RegistrationFormViewer.acceptedTemplate=Accepted request notification template (user):
RegistrationFormViewer.invitationTemplate=Invitation template (user):
RegistrationFormViewer.optional=optional
RegistrationFormViewer.mandatory=mandatory
RegistrationFormViewer.agreement=Agreement:
RegistrationFormViewer.paramLabel=Displayed label:
RegistrationFormViewer.paramDescription=Displayed tooltip:
RegistrationFormViewer.paramOptional=Optional parameter
RegistrationFormViewer.paramSettings=How to collect the value:
RegistrationFormViewer.paramIdentity=Identity type:
RegistrationFormViewer.paramGroup=Group:
RegistrationFormViewer.paramCredential=Credential:
RegistrationFormViewer.paramAttribute=Attribute:
RegistrationFormViewer.paramAttributeGroup=Attribute''s group:
RegistrationFormViewer.paramShowGroup=Show attribute group in the form
RegistrationFormViewer.assignedAC=Attribute class:
RegistrationFormViewer.twoLines={0}<br>{1}
RegistrationFormViewer.captchaLength=Yes ({0} characters)
RegistrationFormViewer.captcha=Captcha:
RegistrationFormViewer.byInvitationOnly=Available by invitation only:
RegistrationFormViewer.layout=Layout:
RegistrationFormViewer.defaultLayout=DEFAULT LAYOUT
RegistrationFormViewer.layoutTab=Layout
RegistrationFormViewer.paramConfirmationMode=Confirmation mode:
RegistrationFormViewer.title2ndStage=2nd stage title:
RegistrationFormViewer.showGotoSignin=Show go to sign-in link

BaseFormNotificationsEditor.sendAdminCopy=Send copy of user messages also to admins

RegistrationFormEditDialog.ignoreRequestsAndInvitations=Ignore invitations and the pending requests submitted for this form (may left them in illegal state)
RegistrationFormEditDialog.publiclAndRemoteWarning=The configured form is marked as public and contains mandatory \
remotely obtained parameters. What is more it also allows for non-remote sign up. \
This is correct only in rare corner cases, mostly when collecting X.500 identity \
from web browser installed personal certificate. Are you sure that you want to save this form? 
RegistrationFormEditor.defaultName=New registration form
RegistrationFormEditor.name=Form name:
RegistrationFormEditor.copyPrefix=Copy of 
RegistrationFormEditor.publiclyAvailable=Publicly available (has public URL and can be used on authentication screen)
RegistrationFormEditor.byInvitationOnly=Available by invitation only
RegistrationFormEditor.autoLoginAutoAcceptedToRealm=Auto login of auto accepted requests to realm:
RegistrationFormEditor.autoLoginAutoAcceptedToRealm.description=When the realm name is set, then the user is automatically \
logged into the realm only when the registration request was automatically accepted, and the remote sign up method used \
to complete the registration.
RegistrationFormEditor.agreements=Agreements
RegistrationFormEditor.identityParams=Collected identities
RegistrationFormEditor.attributeParams=Collected attributes
RegistrationFormEditor.groupParams=Groups to be selected
RegistrationFormEditor.credentialParams=Collected credentials
RegistrationFormEditor.mandatory=Mandatory
RegistrationFormEditor.collectComments=Allow for free text comments
RegistrationFormEditor.cannotLoadTemplates=Cannot load templates with consumer {0}
RegistrationFormEditor.captchaDescription=Captcha length. Set to zero to disable.
RegistrationFormEditor.confirmationModeDesc=Applicable only to verifiable elements: emails and mobile numbers, otherwise ignored. \
Note that for mobile number, verification on acceptance merely makes verification at submit optional.
RegistrationFormEditor.localSignupMethods=Local sign up methods
RegistrationFormEditor.remoteSignupMethods=Remote sign up methods
RegistrationFormEditor.availableRemoteAuthnOptions=Available:
RegistrationFormEditor.selectedRemoteAuthnOptions=Selected:
RegistrationFormEditor.remoteAuthenOptions=Remote sign up options:
RegistrationFormEditor.remoteAuthenOptions.description=Selected authentication options will be used on a form as an option to use.
RegistrationFormEditor.remoteAuthenGridOptions=Methods presented in grid widget:
RegistrationFormEditor.remoteAuthenGridOptions.description=Selected authentication options will be shown on a form in grid view.
RegistrationFormEditor.remoteAuthEnableGridSearch=Enable search on grid
RegistrationFormEditor.remoteAuthGridHeight=Grid rows:

RegistrationFormEditor.paramGroupDesc=Wildcard specifying which group path(s) are allowed to be selected. \
* can be used to specify arbitrary string in group name and ** can be used to specify arbitrary sequence of groups within the path.\
For instance <pre>/**</pre> means any group is allowed and <pre>/my*/**</pre> allows for all all groups starting with /my and their children.
RegistrationFormEditor.paramGroupMulti=Multiple groups can be selected
RegistrationFormViewer.paramGroupMode=Include groups:
RegistrationFormEditor.groupMembership=Select group:
RegistrationFormEditor.dynamicGroup=Form param: {0}
RegistrationFormEditor.layoutSettings=Settings
RegistrationFormEditor.layoutContent=Content
RegistrationFormEditor.primaryLayout=First stage layout
RegistrationFormEditor.secondaryLayout=Second stage layout
RegistrationFormEditor.wrapupWhen=Trigger on:
RegistrationFormEditor.wrapupTitle=Title:
RegistrationFormEditor.wrapupInfo=Extra info:
RegistrationFormEditor.wrapupRedirect=Redirect URL:
RegistrationFormEditor.wrapupRedirectCaption=Redirect caption:
RegistrationFormEditor.automaticRedirect=Redirect automatically
RegistrationFormEditor.wrapUpTab=Finalization
RegistrationFormEditor.signinURL=Sign in URL:
RegistrationFormEditor.registrationPageTitle=Web page title:
RegistrationFormEditor.onlyForStandaloneEnquiry=The finalization settings are applicable for enquires launched with individual link. \
Those shown in dialog window upon login, make use only of error messages.  
RegistrationFormEditor.invalidRedirectURL=Invalid Redirect URL for {0} form finalization.

RegistrationFormsComponent.caption=Registration forms
RegistrationFormsComponent.formsTable=Forms
RegistrationFormsComponent.link=Link
RegistrationFormsComponent.errorGetForms=Can not retrieve existing registration forms.
RegistrationFormsComponent.errorUpdate=Can not update the registration form.
RegistrationFormsComponent.errorAdd=Can not add the registration form.
RegistrationFormsComponent.errorRemove=Can not remove the registration form.
RegistrationFormsComponent.refreshAction=Refresh
RegistrationFormsComponent.addAction=Add a new form
RegistrationFormsComponent.errorInFormEdit=Can not load registration form edit window.
RegistrationFormsComponent.editAction=Edit the form
RegistrationFormsComponent.copyAction=Copy the form
RegistrationFormsComponent.deleteAction=Delete the form
RegistrationFormsComponent.confirmDelete=Are you sure that you want to remove the following forms: {0}?
RegistrationFormsComponent.dropRequests=Delete all pending requests which were submitted for this form.
RegistrationFormsComponent.errorSend=Can not send enquiry notification
RegistrationFormsComponent.resendAction=Re-send enquiry notification
RegistrationFormsComponent.resendConfirmation=Are you sure that you want to re-send a notification about this enquiry \
to all users who have not yet filled it?

EnquiryFormsComponent.caption=Enquiry forms
EnquiryFormViewer.type=Form type:
EnquiryFormViewer.targetGroups=Enquiry target groups:

EnquiryFormEditor.defaultName=New enquiry
EnquiryFormEditor.targetCondition=Target condition:
EnquiryFormEditor.targetConditionDesc=This MVEL condition can be used to filter users for whom the enquiry is applicable.\
It is used together (logical AND) with target groups filter.\
The condition can use the same variables as the entity matching conditions in bulk processing.\
See manual for details.

EnquiryFormNotificationsViewer.enquiryToFillTemplate=New enquiry notification template (user):
EnquiryFormNotificationsViewer.submittedTemplate=Submitted request notification template (admin):

InvitationType.registration=REGISTRATION
InvitationType.enquiry=ENQUIRY

InvitationEditor.prefillInfo=It is possible to prefill some of the form entries.
InvitationEditor.identities=Identities
InvitationEditor.groups=Groups
InvitationEditor.attributes=Attributes
InvitationEditor.requireSameEmail=Remote sign-up email:
InvitationEditor.idExpectation.NONE=Arbitrary
InvitationEditor.idExpectation.HINT=Suggest the same
InvitationEditor.idExpectation.REQUIRED=Require the same
InvitationEditor.limitTo=Limit to:
InvitationEditor.limitToDescription=If empty then all groups allowed by the form are available for selection
InvitationEditor.type=Type:
InvitationEditor.entity=Entity:
InvitationEditor.RegistrationFormId=Registration form:
InvitationEditor.EnquiryFormId=Enquiry form:

InvitationViewer.lastSentTime=Last notification sent time:
InvitationViewer.notificationsSent=Number of notifications sent: 
InvitationViewer.type=Type:
InvitationViewer.expiration=Expiration:
InvitationViewer.contactAddress=Contact address:
InvitationViewer.channelId=Contact channel: 
InvitationViewer.identities=Pre-set identities:
InvitationViewer.attributes=Pre-set attributes:
InvitationViewer.groups=Pre-set membership:
InvitationViewer.errorMissingForm=The form of the invitation does not exist anymore. \
The invitation is invalid and can be safely removed.
InvitationViewer.code=Code:
InvitationViewer.messageParams=Message parameters: 
InvitationViewer.link=invitation link
InvitationViewer.groupLimitedTo=limited to

EnquiryInvitationViewer.entity=Entity:
EnquiryInvitationViewer.formId=Enquiry form:
RegistrationInvitationViewer.expectedIdentity=Expected identity:
RegistrationInvitationViewer.formId=Registration form:


FormLayoutEditor.enableCustom=Enable custom form layout
FormLayoutEditor.addCaption=Add extra element:
FormLayoutEditor.invalidFormInfo=The form settings are currently invalid. Please fix them before manipulating the form layout.
FormLayoutEditor.compactInputs=Compact inputs
FormLayoutEditor.localSignupEmbeddedAsButton=Local sign up embedded as button
FormLayoutEditor.showCancel=Show cancel button
FormLayoutEditor.logo=Logo:
FormLayoutEditor.logoDesc=URL of an image to be shown on top of the registration form. Leave empty if logo should not be added.
FormLayoutEditor.columnWidth=Form width:
FormLayoutEditor.columnWidth.mustBeFloat=Must be float number
FormLayoutEditor.columnWidth.mustBePositive=Must be positive number
FormLayoutEditor.columnWidthUnit=Form width unit:

CaptionElementEditor.caption=Caption:

PresetEditor.active=Prefill this entry
PresetEditor.invalidEntry=Prefilled entry {0} is invalid
PrefilledEntryMode.READ_ONLY=Value will be visible but read only
PrefilledEntryMode.DEFAULT=Value will be used as a default
PrefilledEntryMode.HIDDEN=Value will be set and hidden 

EnquiryType.REQUESTED_MANDATORY=User is requested, mandatory
EnquiryType.REQUESTED_OPTIONAL=User is requested, optional
EnquiryType.STICKY=Sticky

UserFormFillDialog.submitRequest=Submit
UserFormFillDialog.submitAndAccept=Submit and accept

ImportExport.caption=Database backups
ImportExport.exportCaption=Database backup creation
ImportExport.createDump=Create database dump
ImportExport.exportFailed=Database export failed.
ImportExport.importCaption=Restore database from backup
ImportExport.uploadInfo=To restore database contents from backup it must be uploaded first. Note that manually edited file may result in inconsistent database state! 
ImportExport.noFileUploaded=No file was uploaded.
ImportExport.uploadCaption=Backup file upload:
ImportExport.import=Restore from backup!
ImportExport.uploadFileTooBig=Uploaded file was too large.
ImportExport.uploadFileEmpty=Uploaded file is empty.
ImportExport.uploadInProgress=Upload is currently in progress.
ImportExport.uploadFileFirst=Please upload a backup file first.
ImportExport.confirm=<b>Are you absolutely sure that you want to restore database from the uploaded backup?</b>\
<br> <i>Please note that the current database contents will be fully cleared first.</i>\
<br><br> <i>After successful restoring from backup your connection will be forcefully terminated, maybe you will also need to refresh the page manually and log in again.</i>\
<br><br> <i>If any error occurs you will be able to find it in log files. Error popup rather won''t be show as your connection will be reloaded.</i>
ImportExport.importFailed=Database restore failed.
ImportExport.dumpUploaded=Database backup was uploaded at {0}


CredentialRequirements.caption=Credential requirements
CredentialRequirements.name=Name:
CredentialRequirements.defaultName=New credential requirement
CredentialRequirements.description=Description:
CredentialRequirements.credentialsHeader=Credential name
CredentialRequirements.credentialRequirementsHeader=Credential requirements
CredentialRequirements.credentials=Included credentials:
CredentialRequirements.available=Available
CredentialRequirements.chosen=Included
CredentialRequirements.removalCaption=Remove credential requirement
CredentialRequirements.removalConfirm=Are you sure that you want to remove the following credential requirements: {0}?
CredentialRequirements.replacement=Replacement credential requirement:
CredentialRequirements.removalError=Removal error
CredentialRequirements.cantRemoveLast=The last credential requirement can not be removed.

CronExpressionField.invalidValue=The cron expression is invalid, please recheck the manual
CronExpressionField.invalidValueWithReason=The cron expression is invalid, please recheck the manual: {0}
CronExpressionField.cronExpressionDescription=Expression in Quartz cron syntax. \
<pre>Seconds Minutes Hours DayOfMonth Month DayOfWeek [Year]</pre> \
E.g. <pre>0 0 3 * * ?</pre> will execute the action everyday at 3 at night. \
See <a href="http://www.quartz-scheduler.org/documentation/quartz-2.x/tutorials/crontrigger" target="_blank">Quartz docs</a> for details.

RuleEditor.cronExpression=Cron expression:
RuleEditor.condition=Condition:

ImportAttributeTypeEditor.overwrite=Overwrite existing
ImportAttributeTypeEditor.cannotParseFile=Can''t parse uploaded file
ImportAttributeTypeEditor.source=Source:
ImportAttributeTypeEditor.source.predefinedSet=Set:
ImportAttributeTypeEditor.typesToImport=Attribute types to import
ImportAttributeTypeEditor.filterExisting=Skip existing

AttributeType.name=Attribute:
AttributeType.displayedName=Displayed name:
AttributeType.defaultName=New attribute
AttributeType.description=Description:
AttributeType.type=Values type:
AttributeType.syntaxPanelCaption={0} values type settings 
AttributeType.visibility=Visibility:
AttributeType.cardinality=Cardinality:
AttributeType.noLimit=unlimited
AttributeType.uniqueValues=Unique values:
AttributeType.selfModificable=Self modifiable:
AttributeType.uniqueValuesCheck=Unique values
AttributeType.selfModificableCheck=Self modifiable
AttributeType.visibility.local=Local only
AttributeType.visibility.full=Unlimited
AttributeType.flags=Special settings:
AttributeType.instancesImmutable=Values can not be changed
AttributeType.typeImmutable=Type can not be changed
AttributeType.min=Minimum number of values:
AttributeType.maxUnlimited=Maximum number of values unlimited
AttributeType.max=Maximum number of values:
AttributeType.invalidNumber=Must be a non negative integer
AttributeType.invalidSyntaxDefinition=There are errors in the values definition
AttributeType.metadata=Metadata:
AttributeType.nameCopy={0}2

MetadataEditor.addButton=Add metadata
MetadataEditor.editButton=Edit metadata
MetadataEditor.removeButton=Remove metadata
MetadataEditor.editMetadataCaption=Edit metadata
MetadataEditor.metaName=Metadata id:
MetadataEditor.metaSelect=Select metadata type:
MetadataEditor.noMoreMetadataAvailable=All available metadata types are already assigned for this attribute type.

AttributesClass.name=Name:
AttributesClass.defaultName=New attributes class
AttributesClass.description=Description:
AttributesClass.parents=Parent classes:
AttributesClass.parentsInEffective=The class and its inheritance hierarchy
AttributesClass.allowed=Allowed attributes:
AttributesClass.availableACs=Available attributes classes
AttributesClass.selectedACs=Selected attributes classes
AttributesClass.availableAttributes=Available attributes
AttributesClass.selectedAttributes=Selected attributes
AttributesClass.allowArbitrary=Allow arbitrary attributes
AttributesClass.mandatory=Mandatory attributes
AttributesClass.allAllowed=All attributes are allowed
AttributesClass.effectiveClass=Effective class
AttributesClass.attribute=Attribute type name
AttributesClass.resultingClass=Resulting class with inherited attributes
AttributesClass.resultingClassInView=Class parents and inherited attributes
AttributesClass.addACCaption=Create new attributes class
AttributesClasses.metaEffectiveClassName=-EFFECTIVE CLASS-
