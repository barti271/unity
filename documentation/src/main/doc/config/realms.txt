[[realms]]
==== Authentication realms and login sessions

Unity uses _authenticaiton realms_ to manage shared configuration of login sessions for endpoints. Each endpoint 
must be associated with exactly one authentication realm. 

In authentication realm configuration session expiration and blocking of brute force attacks are defined. It is also
possible to enable 'remember me' feature, which is rather insecure as the user must not use it from public computers: 

----
unityServer.core.realms.1.realmName=lowSecurityRealm
unityServer.core.realms.1.blockAfterUnsuccessfulLogins=10
unityServer.core.realms.1.blockFor=30
unityServer.core.realms.1.maxInactivity=3600
unityServer.core.realms.1.enableRememberMeFor=3
----

Association of an endpoint with authentication realm is given in the main endpoint's configuration in 
+unityServer.conf+:

----
unityServer.core.endpoints.N.endpointRealm=lowSecurityRealm
---- 

Please note that several properties of authentication realms are supported only on web endpoints, as for instance
web service (SOAP) endpoints do not use sessions. Still it is important to understand that even for those endpoints
the fact whether the endpoint is or is not in the same authentication realm as other endpoint can be significant.
The most important case is with all targeted tokens and identities which are generated by Unity. Let's consider
an example. 

Two SAML endpoints A (Web) and B (SOAP) are in the same authentication realm R1, while the third endpoint C (SOAP)
is in realm R2. If a service provider asks a client to to authenticate it via A endpoint and receives a transient 
(targeted) identity, this identity will be also valid for the queries to the endpoint B as both are in the same realm,
sharing the session context of the logged user. At the same time this transient identity won't be available at 
endpoint C. 

